import { Component, ElementRef, ViewChild, signal } from '@angular/core';
import { DragDropComponent } from './drag-drop/drag-drop.component';


@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
  })
export class AppComponent {
  title = 'taomish-learning-angular';

  @ViewChild('select') select!: ElementRef;

  show(event: Event) {
    this._optionData.set([...this.options1, 'Loading...']);
    this._optionData.set([...this.options1, ...this.options2]);
    setTimeout(() => {
      // this._optionData.set([...this.options1, ...this.options2]);
      console.log('Test');
    }, 3000);
  }

  options1 = ['one'];
  options2 = ['two', 'three', 'four'];

  _optionData = signal(this.options1);

  options = this.options1;

  dtoFields = [
    'brand',
    'broker',
    'brokerReference',
    'capacity',
    'comments',
    'commodity',
    'company',
    'contractTerm',
    'counterparty',
    'counterpartyCode',
    'createdBy',
    'createdTimestamp',
    'deliveryEndDate',
    'deliverySchedule',
    'deliveryStartDate',
    'deliveryTermsClause',
    'dischargeLocation',
    'externalPackage',
    'externalPackageUnit',
    'externalReference',
    'futureIndex',
    'fxrate',
    'grade',
    'incoterm',
    'internalPackage',
    'internalPackageUnit',
    'internalProfitCenter',
    'isInternalTrade',
    'loadLocation',
    'loadLocationType',
    'location',
    'locationType',
    'manualTradeId',
    'modeOfTransport',
    'origin',
    'packageType',
    'paperTrade',
    'paymentTermsClause',
    'paymentterm',
    'percentage',
    'periodEndDate',
    'periodStartDate',
    'priceTicker',
    'priceType',
    'pricingTermsClause',
    'profitcenter',
    'provisionalFxRate',
    'provisionalPrice',
    'provisionalPriceCurrency',
    'provisionalPriceType',
    'provisionalPriceUom',
    'provisionalPricing',
    'qualityTermsClause',
    'quantity',
    'quantityPeriodicity',
    'quantityTermsClause',
    'quantityToleranceType',
    'quantityUom',
    'quotationPeriodClause',
    'season',
    'settlementTolerancePercentage',
    'specialInstructions',
    'tenantId',
    'toleranceValue',
    'totalTradeQty',
    'totalTradeValue',
    'totalUnits',
    'tradeDateTime',
    'tradeId',
    'tradePrice',
    'tradePriceCurrency',
    'tradePriceUom',
    'tradeSettlementCurrency',
    'tradeStatus',
    'tradeTransactionType',
    'tradeType',
    'traderName',
    'unloadLocationType',
    'updatedBy',
    'updatedTimestamp',
    'username',
    'uuid',
    'validFrom',
    'validTo',
    'weightBasis'
  ];
  
  fileFields = [
    'uuid',
    'created_by',
    'created_timestamp',
    'tenant_id',
    'updated_by',
    'updated_timestamp',
    'brand',
    'broker',
    'comments',
    'commodity',
    'company',
    'contract_confirmation',
    'counterparty',
    'delivery_end_date',
    'delivery_start_date',
    'discharge_location',
    'external_package',
    'external_package_unit',
    'external_reference',
    'factory',
    'future_contract_month',
    'future_index',
    'fxrate',
    'grade',
    'incoterm',
    'internal_package',
    'internal_package_unit',
    'internal_profit_center',
    'is_internal_trade',
    'is_provisional_pricing',
    'load_location',
    'location',
    'long_contract',
    'origin',
    'package_type',
    'paymentterm',
    'percentage',
    'period_end_date',
    'period_start_date',
    'price_type',
    'profitcenter',
    'provisional_fx_rate',
    'provisional_price',
    'provisional_price_currency',
    'provisional_price_type',
    'provisional_price_uom',
    'quantity',
    'quantity_periodicity',
    'quantity_tolerance_type',
    'quantity_uom',
    'season',
    'special_instructions',
    'tolerance_value',
    'total_trade_qty',
    'trade_date_time',
    'trade_id',
    'trade_price',
    'trade_price_currency',
    'trade_price_uom',
    'trade_settlement_currency',
    'trade_transaction_type',
    'trader_name',
    'load_location_type',
    'location_type',
    'mode_of_transport',
    'total_units',
    'unload_location_type',
    'weight_basis',
    'delivery_terms_clause',
    'payment_terms_clause',
    'pricing_terms_clause',
    'quantity_terms_clause',
    'quotation_period_clause',
    'quality_terms_clause',
    'commodity_code',
    'company_code',
    'profitcenter_code',
    'internal_profitcenter_code',
    'counterparty_code',
    'manual_trade_id',
    'broker_reference',
    'paper_trade',
    'settlement_tolerance_percentage',
    'trade_type',
    'total_trade_value',
    'contract_term'
  ];
}
